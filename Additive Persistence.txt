AdditivePersistence:

Using the JavaScript language, have the function AdditivePersistence(num) take the num parameter being passed which will always be a positive integer and return its
additive persistence which is the number of times you must add the digits in num until you reach a single digit. For example: if num is 2718 then your program should return 2 because 2 + 7 + 1 + 8 = 18 and 1 + 8 = 9 and you stop at 9.

Sol: 

function AdditivePersistence(num) {
    var numbers = num.toString().split('');
    var count = 0;
    if (numbers.length <= 1) {
        return count;
    };
    do {
        var sum = 0;
        for (var i = 0; i<numbers.length; i++) {
            sum = sum + Number(numbers[i]);
        }
        numbers = sum.toString().split('');
        count = count + 1;
    } while (numbers.length > 1);
    return count;
};

